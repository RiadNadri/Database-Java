/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/*
    Riad NADRI
    Grégoire ABDEREMANE
    Ryan JARDIN
*/
package Projet;

import javax.swing.table.DefaultTableModel;
/**
 *
 * @author riadn
 */
public class BaseDeDonnée extends javax.swing.JFrame {
    private SiegesDispo calculsiege;//On commence par déclarer une variable de type SiegesDispo
    private Object[][] datas;//Declaration d'un tableau d'objet à 2 dimensions
    /**
     * Creates new form BaseDeDonnée
     */
    public BaseDeDonnée() {
        initComponents();
        //On initialise le tableau avec des valeurs
        datas = new Object[][] { 
            {1,"New York","20/09/2022","OUI",280,190,90},
            {2,"Madrid","25/03/2022","NON",200,150,50},
            {3,"Berlin","25/03/2019","NON",100,80,20},
            {4,"Moscou","17/04/2017","OUI",150,150,0},
            {5,"Milan","05/12/2021","NON",100,50,50},
            {6,"Shanghai","02/10/2020","OUI",300,280,20},
            {7,"Los Angeles","18/09/2019","OUI",210,170,40}
            
        };       
        
        //Comme on ne peut pas manipuler les donner de la table à proprement dit, on 'converti' la table en un DefaultTableModel
        DefaultTableModel dataModel1 = (DefaultTableModel) jTable1.getModel();;
        
        for (int i=0;i<datas.length;i++)//On ajoute une nouvelle ligne pour chaque valeur du tableau
        {
            dataModel1.addRow(datas[i]);
            //datas [i][6]=(Integer)datas [i][4]-(Integer)datas [i][5];Ceci permet de calculer le nombrede place disponible
        }
        
        calculsiege=new SiegesDispo();//On instancie cette variable à l'aide du constructeur
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldVille = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldDate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldEscale = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldCapacite = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldPassagers = new javax.swing.JTextField();
        jButtonAjouter = new javax.swing.JButton();
        jButtonEffacer = new javax.swing.JButton();
        jButtonSupprimer = new javax.swing.JButton();
        jButtonModifier = new javax.swing.JButton();
        jButtonEnregistrer = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jButtonAfficher = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jButtonAfficherLigne = new javax.swing.JButton();
        jTextFieldRechercheIndex = new javax.swing.JTextField();
        jButtonQuitter = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N°vol", "Ville arrivée", "Date", "Escale(s)", "Capacité", "Passagers", "Places disponible"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Ville d'arrivée : ");

        jTextFieldVille.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldVilleActionPerformed(evt);
            }
        });

        jLabel2.setText("Date :");

        jLabel3.setText("Escale : ");

        jLabel4.setText("Capacité : ");

        jLabel5.setText("Nombre de passagers : ");

        jButtonAjouter.setText("Ajouter");
        jButtonAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAjouterActionPerformed(evt);
            }
        });

        jButtonEffacer.setText("Effacer");
        jButtonEffacer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEffacerActionPerformed(evt);
            }
        });

        jButtonSupprimer.setText("Supprimer");
        jButtonSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSupprimerActionPerformed(evt);
            }
        });

        jButtonModifier.setText("Modifier");
        jButtonModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModifierActionPerformed(evt);
            }
        });

        jButtonEnregistrer.setText("Enregistrer");
        jButtonEnregistrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEnregistrerActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pas de filtre", "Avec escale", "Sans escale", "Place disponible > 50", " " }));

        jLabel6.setText("Filtrer par :");

        jButtonAfficher.setText("Afficher");
        jButtonAfficher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAfficherActionPerformed(evt);
            }
        });

        jButton2.setText("Reset");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel7.setText("Vous voulez une ligne en particulier ? Entrez l'index ici :  ");

        jButtonAfficherLigne.setText("Afficher la ligne");
        jButtonAfficherLigne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAfficherLigneActionPerformed(evt);
            }
        });

        jButtonQuitter.setText("Quitter");
        jButtonQuitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonQuitterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldVille, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldDate, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(87, 87, 87)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextFieldCapacite, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextFieldEscale, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButtonAjouter)
                                        .addGap(133, 133, 133)
                                        .addComponent(jButtonModifier))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButtonEffacer)
                                        .addGap(123, 123, 123)
                                        .addComponent(jButtonEnregistrer))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextFieldPassagers, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(286, 286, 286)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jButtonQuitter)
                                .addGap(36, 36, 36)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldRechercheIndex, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonAfficherLigne, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 726, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButtonAfficher, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(66, 66, 66)
                                        .addComponent(jButton2))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(87, 87, 87)
                                        .addComponent(jButtonSupprimer)))))))
                .addGap(43, 105, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(250, 250, 250)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonAfficher)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonSupprimer)
                .addGap(37, 37, 37))
            .addGroup(layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldVille, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jTextFieldEscale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextFieldDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonAjouter)
                            .addComponent(jButtonModifier))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonEffacer)
                            .addComponent(jButtonEnregistrer))))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldCapacite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPassagers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jButtonAfficherLigne)
                    .addComponent(jTextFieldRechercheIndex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonQuitter, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldVilleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldVilleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldVilleActionPerformed

    private void jButtonAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAjouterActionPerformed
        // TODO add your handling code here:
        
        //On va affecter les valeur dans les champs de texte à des variables de type String
        String city= jTextFieldVille.getText(),date= jTextFieldDate.getText();
        String escale=jTextFieldEscale.getText(),capacite=jTextFieldCapacite.getText();
        String passager=jTextFieldPassagers.getText();
        
        //Pour chaque ligne que l'on va rajouter on veut calculer directement le champs place dispo, on fait donc appel aux fonctions setNombre 1&2 de la classe SiegesDispo
        calculsiege.setNombre1(Integer.parseInt(capacite));
        calculsiege.setNombre2(Integer.parseInt(passager));
        
        DefaultTableModel dataModel= (DefaultTableModel) jTable1.getModel();
        
        Object[] ligne=new Object [7];//On déclare un tableau d'Objet dans lequel on va placer les valeurs des champs de texte
        
        ligne[0]= dataModel.getRowCount()+1; //Ceci permet d'itérer l'index pour chaque nouvelle ligne en prenant en compte le nombre de ligne déja disponible dans la table
        ligne[1]=city;
        ligne[2]=date;
        ligne[3]=escale;
        ligne[4]=capacite;
        ligne[5]=passager;
        ligne[6]=calculsiege.calculplacedispo();
        
        dataModel.addRow(ligne);//On rajoute la nouvelle ligne
    }//GEN-LAST:event_jButtonAjouterActionPerformed

    private void jButtonSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSupprimerActionPerformed
        // TODO add your handling code here:
        //On séléctionne une ligne
        int i=jTable1.getSelectedRow();
        
        int k=(int) jTable1.getValueAt(i, 0); //On prend la valeur de l'index de la ligne que l'on va supprimer
        
        DefaultTableModel dataModel=(DefaultTableModel) jTable1.getModel();
        //On affecte la valeur de l'indexe de la ligne sélectionnée à la ligne d'après, puis l'index de la ligne d'après pour la ligne qui vient après et ainsi de suite...
        for(int j=jTable1.getSelectedRow();j<dataModel.getRowCount();j++){
            int p= (int) jTable1.getValueAt(j, 0);//prend la valeur de l'index de la ligne
            jTable1.setValueAt(k, j, 0);//on affecte le nouvel index
            k=p;//on actualise la valeur de l'index
        }
        dataModel.removeRow(i);// On supprime la ligne séléctionnée
        
        
    }//GEN-LAST:event_jButtonSupprimerActionPerformed

    private void jButtonEffacerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEffacerActionPerformed
        // TODO add your handling code here:
        //Pour enlever le texte rentré dans chaque champs
        jTextFieldVille.setText(null);
        jTextFieldDate.setText(null);
        jTextFieldEscale.setText(null);
        jTextFieldCapacite.setText(null);
        jTextFieldPassagers.setText(null);
    }//GEN-LAST:event_jButtonEffacerActionPerformed

    private void jButtonModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModifierActionPerformed
        // TODO add your handling code here:
        int i=jTable1.getSelectedRow(); //On séléctionne la ligne que l'on veut modifier
        
        DefaultTableModel dataModel=(DefaultTableModel) jTable1.getModel();
        
        jTextFieldVille.setText(dataModel.getValueAt(i,1).toString());// On place dans le champ de texte "Ville d'arrivée" la valeur de la colonne Ville arrivée de la ligne séléctionné
        jTextFieldDate.setText(dataModel.getValueAt(i,2).toString());//idem pour la date
        jTextFieldEscale.setText(dataModel.getValueAt(i,3).toString());//idem pour l'escale
        jTextFieldCapacite.setText(dataModel.getValueAt(i,4).toString());//idem pour la capacité
        jTextFieldPassagers.setText(dataModel.getValueAt(i,5).toString());//idem pour les passagers
    }//GEN-LAST:event_jButtonModifierActionPerformed

    private void jButtonEnregistrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEnregistrerActionPerformed
        // TODO add your handling code here:
        //Bouton pour enregistrer une modification
        
        int i=jTable1.getSelectedRow(); //La ligne sélectionnée
        
        DefaultTableModel dataModel=(DefaultTableModel) jTable1.getModel();
        
        //On rentre les nouvelles valeurs dans la table
        dataModel.setValueAt(jTextFieldVille.getText(), i, 1);
        dataModel.setValueAt(jTextFieldDate.getText(), i, 2);
        dataModel.setValueAt(jTextFieldEscale.getText(), i, 3);
        dataModel.setValueAt(jTextFieldCapacite.getText(), i, 4);
        dataModel.setValueAt(jTextFieldPassagers.getText(), i, 5);
        dataModel.setValueAt(Integer.parseInt(jTextFieldCapacite.getText())- Integer.parseInt(jTextFieldPassagers.getText()), i, 6);;
        
        dataModel.fireTableDataChanged();
    }//GEN-LAST:event_jButtonEnregistrerActionPerformed

    private void jButtonAfficherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAfficherActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel dataModel=(DefaultTableModel) jTable1.getModel();
        
        int nblignes= dataModel.getRowCount();
        
        
        /*Comme c'est une liste déroulante que l'on veut manipuler, on utilise l'outil switch
        Cela nous permettra d'établir le code en fonction du choix fait par l'utilisateur
        */
        switch(jComboBox1.getSelectedIndex()){
            case 0://Cas où on ne veut pas de filtre
                     for (int i=0;i<datas.length;i++)
                    {
                        dataModel.removeRow(i);//On supprime toutes les lignes du tableau
                        
                    }
                
            break;
            case 1://Cas où on veut seulement les lignes avec "OUI" dans le champ escales
                for (int i=0;i<dataModel.getRowCount();i++){
                    if(dataModel.getValueAt(i, 3)=="NON"){
                        dataModel.removeRow(i);//On supprime toutes les lignes qui contiennent "NON" dans le champ Escale
                    }                      
                }
            break;
            case 2 ://Cas où on veut seulement les lignes avec "NON" dans le champ escales
                for (int i=0;i<dataModel.getRowCount();i++){
                    if(dataModel.getValueAt(i, 3)=="OUI"){
                        dataModel.removeRow(i);//On supprime toutes les lignes qui contiennent "OUI" dans le champ Escale
                    }                      
                }
           break;
            case 3://Cas où on veut uniquement les lignes qui ont plus de 50 dans le champs "Places disponibles"
                for (int i=0;i<dataModel.getRowCount();i++){
                    if(Integer.parseInt(dataModel.getValueAt(i, 6).toString())<50){
                        dataModel.removeRow(i);//On supprimes les lignes avec un nombre en-dessous de 50 dans le champs "Places disponibles"
                    }                      
                }
            break;
        }
    }//GEN-LAST:event_jButtonAfficherActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        //Bouton qui servira à remplir le tableau comme au début (suite à l'utilisation du "Pas de filtre" dans la liste déroulante)
        DefaultTableModel dataModel=(DefaultTableModel) jTable1.getModel();
        
        for (int i=0;i<datas.length;i++)
        {
            dataModel.addRow(datas[i]);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButtonAfficherLigneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAfficherLigneActionPerformed
        // TODO add your handling code here:
        //Ce bouton permettra de rechercher une ligne en particulier à partir de son index
        Object [] k= new Object[7];//On declare une variable de type object qui nous permettra d'enregistrer les valeurs des cellules de la ligne en question
        DefaultTableModel dataModel=(DefaultTableModel) jTable1.getModel();
        
        for (int i=0;i<jTable1.getRowCount();i++){
            if (jTable1.getValueAt(i, 0)== jTextFieldRechercheIndex.getText()){ //Si la valeur de l'index est celle que l'on recherche alors ont enregistre les valeur de ses cellules dans la variable k
               // k= new Object []{
                        k[0]=dataModel.getValueAt(i,0);
                        k[1]=dataModel.getValueAt(i,1);
                        k[2]=dataModel.getValueAt(i,2);
                        k[3]=dataModel.getValueAt(i,3);
                        k[4]=dataModel.getValueAt(i,4);
                        k[5]=dataModel.getValueAt(i,5);
                        k[6]=dataModel.getValueAt(i,6);
                //};
            }else//Sinon on supprime la ligne 
                dataModel.removeRow(i);
            
        }
        dataModel.addRow(k);// On finit par ajouter la ligne qu'on a enregistré
    }//GEN-LAST:event_jButtonAfficherLigneActionPerformed

    private void jButtonQuitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonQuitterActionPerformed
        // TODO add your handling code here:
        dispose();
        System.exit(0);
    }//GEN-LAST:event_jButtonQuitterActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BaseDeDonnée.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BaseDeDonnée.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BaseDeDonnée.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BaseDeDonnée.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BaseDeDonnée().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonAfficher;
    private javax.swing.JButton jButtonAfficherLigne;
    private javax.swing.JButton jButtonAjouter;
    private javax.swing.JButton jButtonEffacer;
    private javax.swing.JButton jButtonEnregistrer;
    private javax.swing.JButton jButtonModifier;
    private javax.swing.JButton jButtonQuitter;
    private javax.swing.JButton jButtonSupprimer;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldCapacite;
    private javax.swing.JTextField jTextFieldDate;
    private javax.swing.JTextField jTextFieldEscale;
    private javax.swing.JTextField jTextFieldPassagers;
    private javax.swing.JTextField jTextFieldRechercheIndex;
    private javax.swing.JTextField jTextFieldVille;
    // End of variables declaration//GEN-END:variables
}
